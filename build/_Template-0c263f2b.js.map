{"version":3,"file":"_Template-0c263f2b.js","sources":["../../src/common/sticky.js","../../src/domain/core/component/usecase/data/SetFullscreenStateCommand.ts","../../src/presentation/pages/series/viewmodel/FullscreenViewModel.ts","../../node_modules/svelte-bootstrap-icons/lib/ArrowLeft/ArrowLeft.svelte","../../node_modules/svelte-bootstrap-icons/lib/ArrowRight/ArrowRight.svelte","../../src/presentation/pages/series/view/components/BottomNavigation.svelte","../../src/presentation/components/button/IconButton.svelte","../../node_modules/svelte-bootstrap-icons/lib/AspectRatio/AspectRatio.svelte","../../node_modules/svelte-bootstrap-icons/lib/AspectRatioFill/AspectRatioFill.svelte","../../src/presentation/pages/series/view/components/FullScreenIcon.svelte","../../node_modules/svelte-bootstrap-icons/lib/ArrowUp/ArrowUp.svelte","../../src/presentation/pages/series/view/components/ToTopIcon.svelte","../../node_modules/svelte-bootstrap-icons/lib/ArrowDown/ArrowDown.svelte","../../src/presentation/pages/series/view/components/ToBottomIcon.svelte","../../src/presentation/pages/series/view/post/_Template.svelte"],"sourcesContent":["/**\n * Svelte action that dispatches a custom stuck event when a node becomes stuck or unstuck (position: sticky is having an effect)\n * @param node  - the node the action is placed on\n * @param params.callback - function to execute when the node becomes stuck or unstuck\n */\n export default function sticky(node, { stickToTop }) {\n    const intersectionCallback = function (entries) {\n        // only observing one item at a time\n        const entry = entries[0];\n\n        let isStuck = false;\n        if (!entry.isIntersecting && isValidYPosition(entry)) {\n            isStuck = true;\n        }\n\n        node.dispatchEvent(new CustomEvent('stuck', {\n            detail: { isStuck }\n        }));\n    };\n\n    const isValidYPosition = function ({ target, boundingClientRect }) {\n        if (target === stickySentinelTop) {\n            return boundingClientRect.y < 0;\n        } else {\n            return boundingClientRect.y > 0;\n        }\n    };\n\n    const mutationCallback = function (mutations) {\n        // If something changes and the sentinel nodes are no longer first and last child, put them back in position\n        mutations.forEach(function (mutation) {\n            const { parentNode: topParent } = stickySentinelTop;\n            const { parentNode: bottomParent } = stickySentinelBottom;\n\n            if (stickySentinelTop !== topParent.firstChild) {\n                topParent.prepend(stickySentinelTop);\n            }\n            if (stickySentinelBottom !== bottomParent.lastChild) {\n                bottomParent.append(stickySentinelBottom);\n            }\n        });\n    };\n\n    const intersectionObserver = new IntersectionObserver(\n        intersectionCallback,\n        {}\n    );\n    const mutationObserver = new MutationObserver(mutationCallback);\n\n    // we insert and observe a sentinel node immediately after the target\n    // when it is visible, the target node cannot be sticking\n    const sentinelStyle = 'position: absolute; height: 1px;';\n    const stickySentinelTop = document.createElement('div');\n    stickySentinelTop.classList.add('stickySentinelTop');\n    // without setting a height, Safari breaks\n    stickySentinelTop.style = sentinelStyle;\n    node.parentNode.prepend(stickySentinelTop);\n\n    const stickySentinelBottom = document.createElement('div');\n    stickySentinelBottom.classList.add('stickySentinelBottom');\n    stickySentinelBottom.style = sentinelStyle;\n    node.parentNode.append(stickySentinelBottom);\n\n    if (stickToTop) {\n        intersectionObserver.observe(stickySentinelTop);\n    } else {\n        intersectionObserver.observe(stickySentinelBottom);\n    }\n\n    mutationObserver.observe(node.parentNode, { childList: true });\n\n    return {\n        update({ stickToTop }) {\n            // change which sentinel we are observing\n            if (stickToTop) {\n                intersectionObserver.unobserve(stickySentinelBottom);\n                intersectionObserver.observe(stickySentinelTop);\n            } else {\n                intersectionObserver.unobserve(stickySentinelTop);\n                intersectionObserver.observe(stickySentinelBottom);\n            }\n        },\n\n        destroy() {\n            intersectionObserver.disconnect();\n            mutationObserver.disconnect();\n        }\n    };\n}\n","export default class SetFullscreenStateCommand {\n    constructor({ value }) {\n        this.value = value;\n    }\n}\n;\n","import SetFullscreenStateCommand from \"@domain/core/component/usecase/data/SetFullscreenStateCommand\";\nimport { componentUseCase } from \"@src/inject\";\nimport { writable } from \"svelte/store\";\nexport const fullscreenObserver = writable(false);\nexport async function getFullscreenState() {\n    const response = await componentUseCase.getFullScreenState.execute();\n    fullscreenObserver.set(response.value);\n}\n;\nexport async function setFullscreenState(value) {\n    componentUseCase.setFullScreenState.execute(new SetFullscreenStateCommand({\n        value: value\n    }));\n    fullscreenObserver.set(value);\n}\n;\n","<!-- svelte-ignore a11y-mouse-events-have-key-events --><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class:bi={true} class:bi-arrow-left={true} viewBox=\"0 0 16 16\" {...$$restProps} on:click on:mouseover on:mouseenter on:mouseleave on:keydown><slot />\n  <path fill-rule=\"evenodd\" d=\"M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z\"/>\n</svg>","<!-- svelte-ignore a11y-mouse-events-have-key-events --><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class:bi={true} class:bi-arrow-right={true} viewBox=\"0 0 16 16\" {...$$restProps} on:click on:mouseover on:mouseenter on:mouseleave on:keydown><slot />\n  <path fill-rule=\"evenodd\" d=\"M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8z\"/>\n</svg>","<script lang=\"ts\">\n    export let title: string;\n    export let prev: {id: number, title: string, url: string};\n    export let next: {id: number, title: string, url: string};\n\n    import ArrowLeft from \"svelte-bootstrap-icons/lib/ArrowLeft/ArrowLeft.svelte\";\n    import ArrowRight from \"svelte-bootstrap-icons/lib/ArrowRight/ArrowRight.svelte\";\n</script>\n\n<div class=\"nav\">\n    <div class=\"prev\">\n        {#if prev !== undefined}\n            <div class=\"w\">\n                <a href=\"/#/series/{title}/{prev.url}\">\n                    <div class=\"i\">\n                        <ArrowLeft width=\"20\" height=\"20\" />\n                    </div>\n                    <div class=\"t\">\n                        {prev.id + 1}.&nbsp;&nbsp;{prev.title}\n                    </div>\n                    <div class=\"s\">\n                        이전\n                    </div>\n                </a>\n            </div>\n        {/if}\n    </div>\n    <div class=\"list\">\n        <div class=\"w\">\n            <a href=\"/#/series/{title}\">\n                목록으로\n            </a>\n        </div>\n    </div>\n    <div class=\"next\">\n        {#if next !== undefined}\n            <div class=\"w\">\n                <a href=\"/#/series/{title}/{next.url}\">\n                    <div class=\"i\">\n                        <ArrowRight width=\"20\" height=\"20\" />\n                    </div>\n                    <div class=\"t\">\n                        {next.id + 1}.&nbsp;&nbsp;{next.title}\n                    </div>\n                    <div class=\"s\">\n                        다음\n                    </div>\n                </a>\n            </div>\n        {/if}\n    </div>\n</div>\n\n<style lang=\"scss\">\n    $width: 768px;\n\n    .nav {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        width: 100%;\n        font-size: 1rem;\n    }\n\n    .w {\n        display: flex;\n\n        div {\n            display: flex;\n            align-items: center;\n        }\n\n        a {\n            display: flex;\n            color: #333;\n            align-items: center;\n            padding: 1rem 1rem;\n            border-radius: 5px;\n            transition: all .2s ease;\n            text-decoration: none;\n\n            &:hover {\n                background-color: #efefef;\n            }\n\n            .s {\n                display: none;\n            }\n        }\n    }\n\n    .prev {\n        flex: .4;\n        margin-left: -1rem;\n\n        a {\n            .i {\n                margin-right: 1rem;\n            }\n        }\n    }\n\n    .next {\n        flex: .4;\n        margin-right: -1rem;\n\n        .w {\n            flex-direction: row-reverse;\n        }\n\n        a {\n            flex-direction: row-reverse;\n\n            .i {\n                margin-left: 1rem;\n            }\n        }\n    }\n\n    @media (max-width: $width) {\n        .w {\n            padding: .25rem 0;\n            \n            a:hover {\n                background-color: #fff;\n            }\n\n            .t {\n                display: none;\n            }\n\n            .s {\n                display: block;\n            }\n        }\n\n        .next,\n        .prev {\n            margin: 0;\n        }\n    }\n</style>\n","<script>\n    export let icon;\n    export let text = null;\n    export let size;\n    export let color = \"#333\";\n    export let onClick = null;\n</script>\n\n<div class=\"icon\" class:text={text} on:click={onClick}>\n    <div class=\"w\">\n        <div class=\"i\">\n            <svelte:component this={icon} width={size} height={size} fill={color} />\n        </div>\n        {#if text}\n            <div class=\"t\">\n                {@html text}\n            </div>\n        {/if}\n    </div>\n</div>\n\n<style lang=\"scss\">\n    .icon {\n        cursor: pointer;\n        text-align: center;\n\n        &.text {\n            .i {\n                padding-top: 1rem;\n            }\n\n            .t {\n                padding-bottom: 0;\n                height: 0;\n                display: none;\n                font-size: .8rem;\n                line-height: .8rem;\n            }\n        }\n\n        .w {\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            min-height: 48px;\n            margin: .5rem;\n            border-radius: 5px;\n        }\n\n        &:hover {\n            .w {\n                background-color: #efefef;\n            }\n\n            .t {\n                padding-bottom: 1rem;\n                height: auto;\n                display: block;\n            }\n        }\n    }\n</style>\n","<!-- svelte-ignore a11y-mouse-events-have-key-events --><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class:bi={true} class:bi-aspect-ratio={true} viewBox=\"0 0 16 16\" {...$$restProps} on:click on:mouseover on:mouseenter on:mouseleave on:keydown><slot />\n  <path d=\"M0 3.5A1.5 1.5 0 0 1 1.5 2h13A1.5 1.5 0 0 1 16 3.5v9a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 0 12.5v-9zM1.5 3a.5.5 0 0 0-.5.5v9a.5.5 0 0 0 .5.5h13a.5.5 0 0 0 .5-.5v-9a.5.5 0 0 0-.5-.5h-13z\"/>\n  <path d=\"M2 4.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1H3v2.5a.5.5 0 0 1-1 0v-3zm12 7a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1 0-1H13V8.5a.5.5 0 0 1 1 0v3z\"/>\n</svg>","<!-- svelte-ignore a11y-mouse-events-have-key-events --><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class:bi={true} class:bi-aspect-ratio-fill={true} viewBox=\"0 0 16 16\" {...$$restProps} on:click on:mouseover on:mouseenter on:mouseleave on:keydown><slot />\n  <path d=\"M0 12.5v-9A1.5 1.5 0 0 1 1.5 2h13A1.5 1.5 0 0 1 16 3.5v9a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 0 12.5zM2.5 4a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 1 0V5h2.5a.5.5 0 0 0 0-1h-3zm11 8a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 0-1 0V11h-2.5a.5.5 0 0 0 0 1h3z\"/>\n</svg>","<script lang=\"ts\">\n    import Icon from \"@components/button/IconButton.svelte\";\n    import { fullscreenObserver, setFullscreenState } from \"@series/viewmodel/FullscreenViewModel\";\n    import AspectRatio from \"svelte-bootstrap-icons/lib/AspectRatio/AspectRatio.svelte\";\n    import AspectRatioFill from \"svelte-bootstrap-icons/lib/AspectRatioFill/AspectRatioFill.svelte\";\n</script>\n\n{#if $fullscreenObserver}\n    <Icon icon={AspectRatioFill} text={\"Exit<br/>Full<br/>Screen\"} size={20} onClick={() => setFullscreenState(false)} />\n{:else}\n    <Icon icon={AspectRatio} text={\"Enter<br/>Full<br/>Screen\"} size={20} onClick={() => setFullscreenState(true)}/>\n{/if}\n","<!-- svelte-ignore a11y-mouse-events-have-key-events --><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class:bi={true} class:bi-arrow-up={true} viewBox=\"0 0 16 16\" {...$$restProps} on:click on:mouseover on:mouseenter on:mouseleave on:keydown><slot />\n  <path fill-rule=\"evenodd\" d=\"M8 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L7.5 2.707V14.5a.5.5 0 0 0 .5.5z\"/>\n</svg>","<script>\n    import Icon from '@components/button/IconButton.svelte';\n    import ArrowUp from 'svelte-bootstrap-icons/lib/ArrowUp/ArrowUp.svelte';\n</script>\n\n<Icon icon={ArrowUp} size={20} onClick={() => window.scrollTo({ left: 0, top: 0, behavior: \"smooth\" })} />\n","<!-- svelte-ignore a11y-mouse-events-have-key-events --><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class:bi={true} class:bi-arrow-down={true} viewBox=\"0 0 16 16\" {...$$restProps} on:click on:mouseover on:mouseenter on:mouseleave on:keydown><slot />\n  <path fill-rule=\"evenodd\" d=\"M8 1a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L7.5 13.293V1.5A.5.5 0 0 1 8 1z\"/>\n</svg>","<script>\n    import Icon from '@components/button/IconButton.svelte';\n    import ArrowDown from 'svelte-bootstrap-icons/lib/ArrowDown/ArrowDown.svelte';\n</script>\n\n<Icon icon={ArrowDown} size={20} onClick={() => window.scrollTo({ left: 0, top: document.body.scrollHeight, behavior: \"smooth\" })} />\n","<script lang=\"ts\">\n    export let series: GetSeriesResponse;\n    export let title: string;\n    export let subtitle: string;\n\n    import { onMount } from \"svelte\";\n    import configuration from \"@src/configuration\";\n    import sticky from \"@common/sticky\";\n    import type GetSeriesResponse from \"@domain/core/series/usecase/data/GetSeriesResponse\";\n    import { addRecent, setPostToRead } from \"@series/viewmodel/SeriesViewModel\";\n    import { fullscreenObserver, getFullscreenState } from \"@series/viewmodel/FullscreenViewModel\";\n    import Layout from \"@pages/Layout.svelte\";\n    import Copyright from \"@components/Copyright.svelte\";\n    import BottomNavigation from \"@series/view/components/BottomNavigation.svelte\";\n    import FullScreenIcon from \"@series/view/components/FullScreenIcon.svelte\";\n    import ToTopIcon from \"@series/view/components/ToTopIcon.svelte\";\n    import ToBottomIcon from \"@series/view/components/ToBottomIcon.svelte\";\n\n    let prev: {id: number, title: string, url: string};\n    let current: {id: number, title: string, url: string};\n    let next: {id: number, title: string, url: string};\n\n    let falseAsAny: any = true\n\n    onMount(async () => {\n        current = series.contents.filter(content => content.url === subtitle)[0];\n        prev = series.contents[current.id - 1];\n        next = series.contents[current.id + 1];\n\n        getFullscreenState();\n\n        setPostToRead({\n            seriesTitle: series.title,\n            postTitle: current.title\n        });\n\n        addRecent({title: series.title});\n\n        const footer = document.querySelector(\"footer\");\n        if (footer) {\n            footer.style.display = \"none\";\n        }\n    });\n</script>\n\n<Layout>\n    <div class:full={$fullscreenObserver} class=\"row row-1\">\n        <div class=\"c\">\n            {#if current !== undefined}\n                <div class=\"t\">\n                    {series.title}\n                </div>\n                <div class=\"s\">\n                    <span class=\"i\">{current.id + 1}. </span>{current.title}\n                </div>\n            {/if}\n        </div>\n    </div>\n    <div class=\"row row-2\">\n        <div class=\"slot\">\n            <slot />\n        </div>\n        <div class=\"menu\">\n            <div>\n                <ToTopIcon />\n                <ToBottomIcon />\n                <FullScreenIcon />\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <Copyright author={configuration.author} paddingTop=5 paddingBottom=3 />\n    </div>\n    <div class:full={$fullscreenObserver} class=\"row row-3\" use:sticky={falseAsAny}>\n        <BottomNavigation next={next} prev={prev} title={title} />\n    </div>\n</Layout>\n\n<style lang=\"scss\">\n    $width: 768px;\n\n    .row {\n        padding: 0 8%;\n    }\n\n    @media (max-width: $width) {\n        .row {\n            padding: 0 4%;\n        }\n    }\n\n    .row-1 {\n        position: sticky;\n        top: 0;\n        display: flex;\n        flex-direction: row;\n        height: 80px;\n        border-bottom: solid 1px #ddd;\n        justify-content: center;\n        background-color: var(--backdrop-bg-color);\n        backdrop-filter: var(--backdrop-value);\n        z-index: 888;\n\n        &.full {\n            position: relative;\n        }\n\n        .c {\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n\n            .s {\n                margin-top: .25rem;\n                font-size: 1.25rem;\n                font-weight: 700;\n            }\n\n            .t {\n                font-size: 1rem;\n                color: #666;\n            }\n        }\n    }\n\n    @media (max-width: $width) {\n        .row-1 {\n            background-color: #fff;\n            backdrop-filter: none;\n\n            &.full {\n                position: sticky;\n            }\n\n            .c .s .i{\n                display: inline;\n            }\n        }\n    }\n\n    .row-2 {\n        margin-top: 3rem;\n        display: flex;\n        line-height: calc(1ex / 0.32);\n\n        .slot {\n            width: 100%;\n            max-width: 1024px;\n            margin: auto;\n            font-size: 1.5rem;\n        }\n\n        .menu {\n            width: 64px;\n            margin-left: -64px;\n            z-index: 777;\n\n            div {\n                position: sticky;\n                top: calc(145px + 3rem);\n            }\n        }\n    }\n\n    @media (max-width: $width) {\n        .row-2 {\n            .menu {\n                display: none;\n            }\n        }\n    }\n\n    .row-3 {\n        position: sticky;\n        background-color: var(--backdrop-bg-color);\n        backdrop-filter: var(--backdrop-value);\n        bottom: 0;\n        padding-top: .5rem;\n        padding-bottom: .5rem;\n        border-top: solid 1px #ddd;\n\n        &.full {\n            position: relative;\n        }\n    }\n\n    @media (max-width: $width) {\n        .row-3 {\n            background-color: #fff;\n            backdrop-filter: none;\n            border-top: solid 1px #ddd;\n            padding-top: 0;\n            padding-bottom: 0;\n\n            &.full {\n                position: sticky;\n            }\n        }\n    }\n</style>\n"],"names":["sticky","node","stickToTop","isValidYPosition","target","boundingClientRect","stickySentinelTop","y","intersectionObserver","IntersectionObserver","entries","entry","isStuck","isIntersecting","dispatchEvent","CustomEvent","detail","mutationObserver","MutationObserver","mutations","forEach","mutation","parentNode","topParent","bottomParent","stickySentinelBottom","firstChild","prepend","lastChild","append","sentinelStyle","document","createElement","classList","add","style","observe","childList","update","unobserve","destroy","disconnect","SetFullscreenStateCommand","constructor","value","this","fullscreenObserver","writable","async","setFullscreenState","componentUseCase","setFullScreenState","execute","set","ctx","insert","id","title","url","undefined","prev","next","icon","text","size","color","onClick","AspectRatio","AspectRatioFill","ArrowUp","window","scrollTo","left","top","behavior","ArrowDown","body","scrollHeight","configuration","author","falseAsAny","current","series","subtitle","onMount","contents","filter","content","response","getFullScreenState","getFullscreenState","setPostToRead","seriesTitle","postTitle","addRecent","footer","querySelector","display"],"mappings":"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"}